CC = gcc
RM = rm -f
CFLAGS  = @CFLAGS@ -Wall -Ofast -fPIC
LIBS    = @LIBS@

LIBNAME = algo
LIB     = lib$(LIBNAME).so

BLOCK_CIPHERS = rijndael-alg-fst.o twofish-ferguson.o serpent.o
STREAM_CIPHERS = arcfour.o chacha20.o
HASHES = sha1.o sha256.o sha512.o whirlpool.o
HMACS = hmac-sha1.o hmac-sha256.o hmac-sha512.o hmac-whirlpool.o

OBJECTS = $(BLOCK_CIPHERS) $(STREAM_CIPHERS) $(HASHES) $(HMACS)

USE_AES_NI = @USE_AES_NI@
ifeq ($(USE_AES_NI),yes)
	OBJECTS += aes-ni.o
endif

HEADERS = $(OBJECTS:%.o=%.h)

TEST_PROG    = tests/test
TEST_OBJECTS = tests/main.o tests/utils.o $(OBJECTS:%.o=tests/%.o)
TEST_CFLAGS  = $(CFLAGS) $(shell pkg-config --cflags check)
TEST_LIBS    = $(LIBS) $(shell pkg-config --libs check)

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
MKDIR_P = @MKDIR_P@

prefix       = @prefix@
exec_prefix  = @exec_prefix@
datarootdir  = @datarootdir@
libdir       = @libdir@
incdir       = @includedir@
pkgconfigdir = @pkgconfigdir@


ifndef V
QUIET_CC    = @echo "   CC    $@";
QUIET_LD    = @echo "   LINK  $@";
QUIET_GEN   = @echo "   GEN   $@";
endif


.PHONY: all test clean

all: $(LIB)

include $(wildcard *.d tests/*.d)

$(LIB): $(OBJECTS)
	$(QUIET_LD) $(CC) -MMD -MP -shared $^ -o $@ $(CFLAGS) $(LIBS)

%.o: %.c
	$(QUIET_CC) $(CC) -MMD -MP -c $< -o $@ $(CFLAGS) $(LIBS)

test: $(TEST_PROG)
	LD_LIBRARY_PATH=$$(pwd) $(TEST_PROG)

.PHONY: install install-libalgo install-libalgo-dev

install: install-libalgo install-libalgo-dev

install-libalgo: all
	$(MKDIR_P) $(libdir)
	$(INSTALL_DATA) $(LIB) $(libdir)

install-libalgo-dev:
	$(MKDIR_P) $(incdir)/algo $(pkgconfigdir)
	$(INSTALL_DATA) $(HEADERS) $(incdir)/algo
	$(INSTALL_DATA) libalgo.pc $(pkgconfigdir)

.PHONY: uninstall uninstall-libalgo uninstall-libalgo-dev

uninstall: uninstall-libalgo uninstall-libalgo-dev

uninstall-libalgo:
	$(RM) $(libdir)/$(LIB)

uninstall-libalgo-dev:
	$(RM) $(incdir)/algo
	$(RM) $(pkgconfigdir)/libalgo.pc

$(TEST_PROG): $(TEST_OBJECTS) $(LIB)
	$(QUIET_LD) $(CC) -MMD -MP $(TEST_OBJECTS) -o $@ $(TEST_CFLAGS) $(TEST_LIBS) -L. -l$(LIBNAME)

tests/%.o: tests/%.c
	$(QUIET_CC) $(CC) -MMD -MP -c $< -o $@ $(TEST_CFLAGS) $(TEST_LIBS)

clean:
	$(RM) $(TEST_PROG) *.so *.o */*.o */*.d *.d libalgo.pc

distclean: clean
	$(RM) -r autom4te.cache
	$(RM) Makefile configure configure.scan
	$(RM) config.h* config.log config.status
	$(RM) aclocal.m4 install-sh
